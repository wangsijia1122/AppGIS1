<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIAAoEQAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMLC
        whnCvro/w8C9XcS/u3TFwLx2wr+5VMK9uDbR0bkLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /wPDwLuZxMC86MS/vOTDvrumwsC8gsPAvJHDwLy/xMC88cTAvODEv7xjAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /wHEwbtSxMC84MO/vKrDv7xEzMzMBQAAAACAAAACVQAAAwAAAAC7u7sPw8C6XcO/u7zDv7u/xb+6MAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAxMG8V8TAvP/Dw7kzAAAAAAAAAAGATipogU8p1YJQKv+CUCn9gVApzIFNJ2OAQAAEAAAAAMS/
        vWjEwLz2xsG7LQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMbBuzHDwLvqxL+6NAAAAAB/Tyh4hVUx4quKcf/Lt6j/283C/9zOw//Nuqv/r5B3/4dX
        MuCCTSlwVQAAA8K+u0/FwLzku7u7DwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAzMy7D8HBuiVVVQADgE8oq5RoR/7p4dv////////////+/v7/+vj2//j2
        9P/+/v7/7+nl/5pyU/+BTimcgFUqBsK8vCoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYFPKJ6mhGn99fHu//////////////////by
        8P+ddlj/mXBR//Xx7v//////9vPw/6yLcf6CTyiRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/TCY8jmE///n39f//////////////
        ////////5t3W/5VsTP/CqZf/mXBR//n39f//////+/n4/5dsTf6BTidBAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbUkkB4NSK+bq493//v7+////
        ///////////////////m3db/nXdZ//7+/v+OYT//5dvT////////////4tbO/4JPKdQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6+vrGuzp6XbPwbXdlWtL////
        ///////////////////8/Pv/9vLv/9G/sv+ifWH//////5RpSf/TwrX////////////+/v7/onxf/n1L
        IzMAAAAAzMzMBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO3t7Srq6enr6+rp/qmK
        cv/Xx7v//////////////////////9PCtP+IWDT/i1w5//Lt6v//////7eXg/4laNv/r493/////////
        ///f0sn/gU8oxQAAAADEwLvXyby8EwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADt7eg46+rp5uvq
        6f/r6un/il06//j39f//////////////////////qolv/8Wunf/n3tf////////////08e3/j2JA/9jJ
        vf///////////+/q5f+CUCnmAAAAAMTAvdfBu7UtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqqqqA+vq
        6d3r6un/6+rp/+fk4v+PYkD///////////////////////n29P+QZEP//Pv6///////8/Pv/0sCy/5Bj
        Qf+7oYz//v7+/////////////Pv6/4VUL/AAAAAAw7+9vMO/vEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADs7OqQ6+rp/uvq6f/r6un/4t3Z/5RqSv//////////////////////8u3p/5NoSP/Zyr///f38/7mf
        if+WbE3/tpmD//r49v/Wxrr/7ujj////////////iVk29gAAAADDv7qqwr67UwAAAAAAAAAAAAAAAAAA
        AAAAAAAA////Auvq6fDr6un/6+rp/+vq6f/j3tv/lGlI////////////2Mm+//Pu6///////2cq//4pb
        N/+HWDP/kGVD//j29P/Pva7/zLio/45iQP+ddlj/zbmr/+3n4f+IVzP0AAAAAMS/u6jCv7xUAAAAAAAA
        AAAAAAAAAAAAAAAAAADt6ek56+rp/uvq6f/r6un/6+rp/+nn5f+MXzz//v79//////+GVjL/vqSQ////
        ///+/v7/6uLc/+bc1f+5nYn/onxg/6uLcf+2mYP/3M7D/8m0o/+2mYP/4NTK/4NRK+sAAAAAxMC8usO/
        uEgAAAAAAAAAAAAAAAAAAAAAAAAAAOnp6b3r6un/6+rp/+vq6f/r6un/6+rp/5BlRP/18e7/+Pb0/5Ji
        Ov+gel3//v79/9XEuP+KXDn/kGNC/5NoR/+riXD/+/r4///////////////////////p4dv/glAp4AAA
        AADEv7vXxsG7MQAAAAAAAAAAAAAAAAAAAAD///8D6+rp/Ovq6f/r6un/6+rp/+vq6f/r6un/yruu//Lt
        6f+zloD/0aN2/5BgOf/w6ub/1MK1/5RqSf/u5+L/9vLw/////////////////////////////////9PC
        tf+ATiiTAAAAAMTAvO+/v7UYAAAAAAAAAAAAAAAAAAAAAP///wbr6un/6+rp/+vq6f/r6un/6+rp/+vq
        6f/r6un/7urn/4VULv/1ypr/uIpf/7yij//6+Pb/u6GN/49jQf+WbE3/////////////////////////
        ///6+Pf/j2JA9oBAGhTCwrYVxMC83b+/vwQAAAAAAAAAAAAAAAAAAAAA////Buvq6f/r6un/6+rp/+vq
        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
</value>
  </data>
</root>